% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tf_idf.R
\name{tf_idf}
\alias{tf_idf}
\title{TF-IDF: Term Frequencyâ€“Inverse Document Frequency}
\usage{
tf_idf(input, level = c("word", "letter"), token = c("regex", "transformer"))
}
\arguments{
\item{input}{A vector of character strings (one per document), or a data frame of tokens and their frequencies}

\item{level}{The level of linguistic granularity: currently supports \code{"word"} or \code{"letter"}}

\item{token}{The method for tokenisation: either \code{"regex"} (basic pattern matching) or \code{"transformer"} (BERT-based tokenisation)}
}
\value{
A data frame with the following columns: (1) document, (2) term, (3) tf, (4) idf, and (5) tf_idf

A data frame with columns: document, term, tf, idf, tf_idf
}
\description{
The function \code{tf_idf()} calculates the TF-IDF score for each linguistic element across a set of documents. It combines two key components: term frequency (TF) and inverse document frequency (IDF), producing a score that reflects both the importance of a term within a document and its uniqueness across the full corpus.
}
\details{
This function supports both raw text and structured token-frequency data frames, ensuring compatibility with the broader langstats pipeline. Internally, it delegates preprocessing to \code{input_handling()}, followed by calls to \code{tf()} and \code{idf()} to extract the necessary components for TF-IDF calculation.

TF-IDF is widely used in information retrieval and NLP tasks to highlight terms that are both frequent in a document and rare across the corpus. Common stopwords typically have low TF-IDF scores, while distinctive terms rank higher.

This function ensures smooth integration with the langstats toolkit by automatically adapting to text vectors or data frames and applying consistent token and frequency handling through \code{input_handling()}.
}
\examples{
texts <- c("Codd is English", "Codd studied in Oxford", "Codd proposed the relational model in 1970")
tf_idf(texts, level = "word")

df <- data.frame(word = c("model", "relational", "Codd"), frequency = c(10, 3, 2))
tf_idf(df, level = "word")

}
\seealso{
\code{\link{tf}}, \code{\link{idf}}, \code{\link{input_handling}}
}
